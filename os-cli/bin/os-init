#!/usr/bin/env node

const program = require('commander')
const path = require('path')
// 加载动画
const ora = require('ora')
const fs = require('fs-extra')
const chalk = require('chalk')
const inquirer = require('inquirer')
const logger = require('../lib/logger')

/**
 * Usage.
 */

program.usage('<template-name> [project-name]')

/**
 * Help.
 */

program.on('--help', () => {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # 利用内置模板快速初始化一个项目'))
  console.log('    $ os init react my-project')
  console.log()
})

/**
 * Help.
 */

function help () {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}
help()

/**
 * Settings.
 */

let template = program.args[0]
const rawName = program.args[1]
const inPlace = !fs.pathExistsSync(process.cwd() + '/' + rawName)
const to = path.resolve(rawName || '.')
const nw = path.join(__dirname, '..')

/**
 * Padding.
 */
process.on('exit', () => {
  console.log()
})

if(fs.pathExistsSync(nw + '/tmp/' + template)) {
  inquirer.prompt([{
    type: 'confirm',
    message: inPlace
      ? '确定要在'+ process.cwd() +'目录下创建项目吗?'
      : '项目目录已经存在, 继续创建吗?',
    name: 'ok'
  }]).then(answers => {
    if (answers.ok) {
      run()
    }
  }).catch(logger.fatal)
} else {
  logger.fatal('"%s"暂无构建模板，请通过os list查看支持列表', template)
}

/**
 * 将模板项目复制到本地
 */

function run () {
    const spinner = ora('构建项目中......');
    spinner.start();
    fs.removeSync(to);
    fs.ensureDirSync(to);
    fs.copy(nw + '/tmp/' + template, to).then(() => {
      spinner.stop();
      console.log(chalk.green('构建成功！使用npm或yarn安装依赖，开始你的项目吧！'))
    }).catch(err => console.log('构建异常\r\n' + err))
}